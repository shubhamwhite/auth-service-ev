openapi: 3.0.3
info:
  title: Auth and User Management API
  description: >-
    This API provides endpoints for user signup, OTP verification, login, password reset,
    Google login, and user profile management.
  version: 1.0.0
servers:
  - url: https://api.example.com
    description: Production server
  - url: localhost:4000/api/v1/auth/api-docs
    description: Local server
components:
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: token
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
          format: email
        profile_image:
          type: string
          format: uri
        is_verified:
          type: boolean
        google_id:
          type: string
          nullable: true
        login_type:
          type: string
          enum: [manual, google]
      required:
        - id
        - first_name
        - last_name
        - email
        - is_verified
    ErrorResponse:
      type: object
      properties:
        status:
          type: integer
        message:
          type: string
      required:
        - status
        - message
    SignupRequest:
      type: object
      properties:
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
        profile_image:
          type: string
          format: binary
      required: [first_name, last_name, email, password]
    SignupResponse:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/User'
        token:
          type: string
      required: [user, token]
    LoginRequest:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
      required: [email, password]
    LoginResponse:
      type: object
      properties:
        userData:
          $ref: '#/components/schemas/User'
        token:
          type: string
      required: [userData, token]
    OtpRequest:
      type: object
      properties:
        verification_otp:
          type: string
      required: [verification_otp]
    ResendOtpRequest:
      type: object
      properties:
        email:
          type: string
          format: email
        flag:
          type: string
          enum: [forgot_password, resend_otp]
      required: [email, flag]
    ResetPasswordRequest:
      type: object
      properties:
        verification_otp:
          type: string
        new_password:
          type: string
      required: [verification_otp, new_password]
    GoogleLoginRequest:
      type: object
      properties:
        idToken:
          type: string
      required: [idToken]
    UpdateUserRequest:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
        otp:
          type: string
        profile_image:
          type: string
          format: binary
  responses:
    UnauthorizedError:
      description: Access token is missing or invalid
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
security:
  - cookieAuth: []
paths:
  /signup:
    post:
      tags: [Auth]
      summary: User signup with optional profile image
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SignupRequest'
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 201
                  message:
                    type: string
                    example: User created successfully. Check your email for OTP verification
                  data:
                    $ref: '#/components/schemas/SignupResponse'
        '400':
          $ref: '#/components/responses/UnauthorizedError'
  /verify-otp:
    post:
      tags: [Auth]
      summary: Verify user OTP
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OtpRequest'
      responses:
        '200':
          description: User verified successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: User verified successfully
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                      email:
                        type: string
                      is_verified:
                        type: boolean
        '404':
          description: Invalid OTP
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /password-reset/otp/resend:
    post:
      tags: [Auth]
      summary: Resend OTP or send forgot password OTP
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResendOtpRequest'
      responses:
        '200':
          description: OTP sent/resent successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
        '400':
          description: Invalid flag or email missing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /login:
    post:
      tags: [Auth]
      summary: User login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /password-reset:
    post:
      tags: [Auth]
      summary: Reset password with OTP
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPasswordRequest'
      responses:
        '200':
          description: Password reset successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: Password reset successfully
                  data:
                    type: object
                    properties:
                      userData:
                        $ref: '#/components/schemas/User'
                      token:
                        type: string
        '400':
          description: OTP expired or missing fields
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /logout:
    get:
      tags: [Auth]
      summary: Logout user
      responses:
        '200':
          description: Logout successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /user/{id}:
    get:
      tags: [User]
      summary: Get user by ID
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      security:
        - cookieAuth: []
      responses:
        '200':
          description: User fetched successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /user/update/{id}:
    patch:
      tags: [User]
      summary: Update user profile
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      security:
        - cookieAuth: []
      requestBody:
        required: false
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UpdateUserRequest'
      responses:
        '200':
          description: User updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: User updated successfully
                  data:
                    $ref: '#/components/schemas/User'
        '404':
          description: User not found
        '422':
          description: Validation or OTP error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /google-login:
    post:
      tags: [Auth]
      summary: Login or signup with Google
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleLoginRequest'
      responses:
        '200':
          description: Google login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: Google login successful
                  data:
                    type: object
                    properties:
                      userData:
                        $ref: '#/components/schemas/User'
                      token:
                        type: string
        '400':
          description: ID Token missing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Email conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
